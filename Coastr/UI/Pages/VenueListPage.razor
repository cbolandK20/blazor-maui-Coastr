@page "/venues"
@inject IVenueService service
@inject StateContainer state;

<div style="height:100%; overflow-y:scroll">
    <MudExpansionPanels MultiExpansion="false" Elevation="5">
        @foreach (var modelItem in _model)
        {
            <MudExpansionPanel>
                <TitleContent>
                    @{
                        var itemId = modelItem.Id;
                        var linkTarget = $"/editVenue/{modelItem.Id}";
                    }
                    <div class="expansion-panel-header-3-grid">
                        <MudText>
                            @modelItem.Name
                        </MudText>
                        <MudIconButton Variant="Variant.Outlined" Color="@Color.Primary" Icon="fa-solid fa-pen" Href="@linkTarget" />
                        <MudIconButton Variant="Variant.Filled" Color="@Color.Primary" Icon="fa-solid fa-map" OnClick="@(() => ShowOnMapClick(itemId))" />
                    </div>
                </TitleContent>
                <ChildContent>
                    <MenueComponent Model="modelItem.Menu" ReadOnly="true" />
                </ChildContent>
            </MudExpansionPanel>
        }
    </MudExpansionPanels>
</div>

@code {

    private IList<Venue> _model { get; set; }


    protected override void OnInitialized()
    {
        base.OnInitialized();
        state.HeaderText = "Orte";
    }

    protected async override Task OnInitializedAsync()
    {        
        _model = await service.GetAllAsync();
        await base.OnInitializedAsync();
    }

    private async Task ShowOnMapClick(int? id)
    {
        await service.ShowOnMap(id.Value);
    }

}
